#TODO comp - change comp, a,a to comp a, *
class Assembler:
    def __init__(self, code):
        self.code = code
        self.OPCODES = {
            "mov a,*": 0b0000010100000000,
            "mov a,b": 0b0000010100000001,
            "mov a,c": 0b0000010100000010,
            "mov a,d": 0b0000010100000011,
            "mov a,e": 0b0000010100000100,
            "mov a,f": 0b0000010100000101,
            "mov a,h": 0b0000010100000110,
            "mov a,l": 0b0000010100000111,
            "mov a,pc": 0b0000010100001000,
            "mov a,sp": 0b0000010100001001,
            "mov b,a": 0b0000010100010000,
            "mov b,*": 0b0000010100010001,
            "mov b,c": 0b0000010100010010,
            "mov b,d": 0b0000010100010011,
            "mov b,e": 0b0000010100010100,
            "mov b,f": 0b0000010100010101,
            "mov b,h": 0b0000010100010110,
            "mov b,l": 0b0000010100010111,
            "mov b,pc": 0b0000010100011000,
            "mov b,sp": 0b0000010100011001,
            "mov c,a": 0b0000010100100000,
            "mov c,b": 0b0000010100100001,
            "mov c,*": 0b0000010100100010,
            "mov c,d": 0b0000010100100011,
            "mov c,e": 0b0000010100100100,
            "mov c,f": 0b0000010100100101,
            "mov c,h": 0b0000010100100110,
            "mov c,l": 0b0000010100100111,
            "mov c,pc": 0b0000010100101000,
            "mov c,sp": 0b0000010100101001,
            "mov d,a": 0b0000010100110000,
            "mov d,b": 0b0000010100110001,
            "mov d,c": 0b0000010100110010,
            "mov d,*": 0b0000010100110011,
            "mov d,e": 0b0000010100110100,
            "mov d,f": 0b0000010100110101,
            "mov d,h": 0b0000010100110110,
            "mov d,l": 0b0000010100110111,
            "mov d,pc": 0b0000010100111000,
            "mov d,sp": 0b0000010100111001,
            "mov e,a": 0b0000010101000000,
            "mov e,b": 0b0000010101000001,
            "mov e,c": 0b0000010101000010,
            "mov e,d": 0b0000010101000011,
            "mov e,*": 0b0000010101000100,
            "mov e,f": 0b0000010101000101,
            "mov e,h": 0b0000010101000110,
            "mov e,l": 0b0000010101000111,
            "mov e,pc": 0b0000010101001000,
            "mov e,sp": 0b0000010101001001,
            "mov f,a": 0b0000010101010000,
            "mov f,b": 0b0000010101010001,
            "mov f,c": 0b0000010101010010,
            "mov f,d": 0b0000010101010011,
            "mov f,e": 0b0000010101010100,
            "mov f,*": 0b0000010101010101,
            "mov f,h": 0b0000010101010110,
            "mov f,l": 0b0000010101010111,
            "mov f,pc": 0b0000010101011000,
            "mov f,sp": 0b0000010101011001,
            "mov h,a": 0b0000010101100000,
            "mov h,b": 0b0000010101100001,
            "mov h,c": 0b0000010101100010,
            "mov h,d": 0b0000010101100011,
            "mov h,e": 0b0000010101100100,
            "mov h,f": 0b0000010101100101,
            "mov h,*": 0b0000010101100110,
            "mov h,l": 0b0000010101100111,
            "mov h,pc": 0b0000010101101000,
            "mov h,sp": 0b0000010101101001,
            "mov l,a": 0b0000010101110000,
            "mov l,b": 0b0000010101110001,
            "mov l,c": 0b0000010101110010,
            "mov l,d": 0b0000010101110011,
            "mov l,e": 0b0000010101110100,
            "mov l,f": 0b0000010101110101,
            "mov l,h": 0b0000010101110110,
            "mov l,*": 0b0000010101110111,
            "mov l,pc": 0b0000010101111000,
            "mov l,sp": 0b0000010101111001,
            "mov pc,a": 0b0000010110000000,
            "mov pc,b": 0b0000010110000001,
            "mov pc,c": 0b0000010110000010,
            "mov pc,d": 0b0000010110000011,
            "mov pc,e": 0b0000010110000100,
            "mov pc,f": 0b0000010110000101,
            "mov pc,h": 0b0000010110000110,
            "mov pc,l": 0b0000010110000111,
            "mov pc,*": 0b0000010110001000,
            "mov pc,sp": 0b0000010110001001,
            "mov sp,a": 0b0000010110010000,
            "mov sp,b": 0b0000010110010001,
            "mov sp,c": 0b0000010110010010,
            "mov sp,d": 0b0000010110010011,
            "mov sp,e": 0b0000010110010100,
            "mov sp,f": 0b0000010110010101,
            "mov sp,h": 0b0000010110010110,
            "mov sp,l": 0b0000010110010111,
            "mov sp,pc": 0b0000010110011000,
            "mov sp,*": 0b0000010110011001,

            "add a,a": 0b0000000000000000,
"add a,b": 0b0000000000000001,
"add a,c": 0b0000000000000010,
"add a,d": 0b0000000000000011,
"add a,e": 0b0000000000000100,
"add a,f": 0b0000000000000101,
"add a,h": 0b0000000000000110,
"add a,l": 0b0000000000000111,
"add b,a": 0b0000000000010000,
"add b,b": 0b0000000000010001,
"add b,c": 0b0000000000010010,
"add b,d": 0b0000000000010011,
"add b,e": 0b0000000000010100,
"add b,f": 0b0000000000010101,
"add b,h": 0b0000000000010110,
"add b,l": 0b0000000000010111,
"add c,a": 0b0000000000100000,
"add c,b": 0b0000000000100001,
"add c,c": 0b0000000000100010,
"add c,d": 0b0000000000100011,
"add c,e": 0b0000000000100100,
"add c,f": 0b0000000000100101,
"add c,h": 0b0000000000100110,
"add c,l": 0b0000000000100111,
"add d,a": 0b0000000000110000,
"add d,b": 0b0000000000110001,
"add d,c": 0b0000000000110010,
"add d,d": 0b0000000000110011,
"add d,e": 0b0000000000110100,
"add d,f": 0b0000000000110101,
"add d,h": 0b0000000000110110,
"add d,l": 0b0000000000110111,
"add e,a": 0b0000000001000000,
"add e,b": 0b0000000001000001,
"add e,c": 0b0000000001000010,
"add e,d": 0b0000000001000011,
"add e,e": 0b0000000001000100,
"add e,f": 0b0000000001000101,
"add e,h": 0b0000000001000110,
"add e,l": 0b0000000001000111,
"add f,a": 0b0000000001010000,
"add f,b": 0b0000000001010001,
"add f,c": 0b0000000001010010,
"add f,d": 0b0000000001010011,
"add f,e": 0b0000000001010100,
"add f,f": 0b0000000001010101,
"add f,h": 0b0000000001010110,
"add f,l": 0b0000000001010111,
"add h,a": 0b0000000001100000,
"add h,b": 0b0000000001100001,
"add h,c": 0b0000000001100010,
"add h,d": 0b0000000001100011,
"add h,e": 0b0000000001100100,
"add h,f": 0b0000000001100101,
"add h,h": 0b0000000001100110,
"add h,l": 0b0000000001100111,
"add l,a": 0b0000000001110000,
"add l,b": 0b0000000001110001,
"add l,c": 0b0000000001110010,
"add l,d": 0b0000000001110011,
"add l,e": 0b0000000001110100,
"add l,f": 0b0000000001110101,
"add l,h": 0b0000000001110110,
"add l,l": 0b0000000001110111,
"sub a,a": 0b0000000100000000,
"sub a,b": 0b0000000100000001,
"sub a,c": 0b0000000100000010,
"sub a,d": 0b0000000100000011,
"sub a,e": 0b0000000100000100,
"sub a,f": 0b0000000100000101,
"sub a,h": 0b0000000100000110,
"sub a,l": 0b0000000100000111,
"sub b,a": 0b0000000100010000,
"sub b,b": 0b0000000100010001,
"sub b,c": 0b0000000100010010,
"sub b,d": 0b0000000100010011,
"sub b,e": 0b0000000100010100,
"sub b,f": 0b0000000100010101,
"sub b,h": 0b0000000100010110,
"sub b,l": 0b0000000100010111,
"sub c,a": 0b0000000100100000,
"sub c,b": 0b0000000100100001,
"sub c,c": 0b0000000100100010,
"sub c,d": 0b0000000100100011,
"sub c,e": 0b0000000100100100,
"sub c,f": 0b0000000100100101,
"sub c,h": 0b0000000100100110,
"sub c,l": 0b0000000100100111,
"sub d,a": 0b0000000100110000,
"sub d,b": 0b0000000100110001,
"sub d,c": 0b0000000100110010,
"sub d,d": 0b0000000100110011,
"sub d,e": 0b0000000100110100,
"sub d,f": 0b0000000100110101,
"sub d,h": 0b0000000100110110,
"sub d,l": 0b0000000100110111,
"sub e,a": 0b0000000101000000,
"sub e,b": 0b0000000101000001,
"sub e,c": 0b0000000101000010,
"sub e,d": 0b0000000101000011,
"sub e,e": 0b0000000101000100,
"sub e,f": 0b0000000101000101,
"sub e,h": 0b0000000101000110,
"sub e,l": 0b0000000101000111,
"sub f,a": 0b0000000101010000,
"sub f,b": 0b0000000101010001,
"sub f,c": 0b0000000101010010,
"sub f,d": 0b0000000101010011,
"sub f,e": 0b0000000101010100,
"sub f,f": 0b0000000101010101,
"sub f,h": 0b0000000101010110,
"sub f,l": 0b0000000101010111,
"sub h,a": 0b0000000101100000,
"sub h,b": 0b0000000101100001,
"sub h,c": 0b0000000101100010,
"sub h,d": 0b0000000101100011,
"sub h,e": 0b0000000101100100,
"sub h,f": 0b0000000101100101,
"sub h,h": 0b0000000101100110,
"sub h,l": 0b0000000101100111,
"sub l,a": 0b0000000101110000,
"sub l,b": 0b0000000101110001,
"sub l,c": 0b0000000101110010,
"sub l,d": 0b0000000101110011,
"sub l,e": 0b0000000101110100,
"sub l,f": 0b0000000101110101,
"sub l,h": 0b0000000101110110,
"sub l,l": 0b0000000101110111,
"mul a,a": 0b0000001000000000,
"mul a,b": 0b0000001000000001,
"mul a,c": 0b0000001000000010,
"mul a,d": 0b0000001000000011,
"mul a,e": 0b0000001000000100,
"mul a,f": 0b0000001000000101,
"mul a,h": 0b0000001000000110,
"mul a,l": 0b0000001000000111,
"mul b,a": 0b0000001000010000,
"mul b,b": 0b0000001000010001,
"mul b,c": 0b0000001000010010,
"mul b,d": 0b0000001000010011,
"mul b,e": 0b0000001000010100,
"mul b,f": 0b0000001000010101,
"mul b,h": 0b0000001000010110,
"mul b,l": 0b0000001000010111,
"mul c,a": 0b0000001000100000,
"mul c,b": 0b0000001000100001,
"mul c,c": 0b0000001000100010,
"mul c,d": 0b0000001000100011,
"mul c,e": 0b0000001000100100,
"mul c,f": 0b0000001000100101,
"mul c,h": 0b0000001000100110,
"mul c,l": 0b0000001000100111,
"mul d,a": 0b0000001000110000,
"mul d,b": 0b0000001000110001,
"mul d,c": 0b0000001000110010,
"mul d,d": 0b0000001000110011,
"mul d,e": 0b0000001000110100,
"mul d,f": 0b0000001000110101,
"mul d,h": 0b0000001000110110,
"mul d,l": 0b0000001000110111,
"mul e,a": 0b0000001001000000,
"mul e,b": 0b0000001001000001,
"mul e,c": 0b0000001001000010,
"mul e,d": 0b0000001001000011,
"mul e,e": 0b0000001001000100,
"mul e,f": 0b0000001001000101,
"mul e,h": 0b0000001001000110,
"mul e,l": 0b0000001001000111,
"mul f,a": 0b0000001001010000,
"mul f,b": 0b0000001001010001,
"mul f,c": 0b0000001001010010,
"mul f,d": 0b0000001001010011,
"mul f,e": 0b0000001001010100,
"mul f,f": 0b0000001001010101,
"mul f,h": 0b0000001001010110,
"mul f,l": 0b0000001001010111,
"mul h,a": 0b0000001001100000,
"mul h,b": 0b0000001001100001,
"mul h,c": 0b0000001001100010,
"mul h,d": 0b0000001001100011,
"mul h,e": 0b0000001001100100,
"mul h,f": 0b0000001001100101,
"mul h,h": 0b0000001001100110,
"mul h,l": 0b0000001001100111,
"mul l,a": 0b0000001001110000,
"mul l,b": 0b0000001001110001,
"mul l,c": 0b0000001001110010,
"mul l,d": 0b0000001001110011,
"mul l,e": 0b0000001001110100,
"mul l,f": 0b0000001001110101,
"mul l,h": 0b0000001001110110,
"mul l,l": 0b0000001001110111,
"div a,a": 0b0000001100000000,
"div a,b": 0b0000001100000001,
"div a,c": 0b0000001100000010,
"div a,d": 0b0000001100000011,
"div a,e": 0b0000001100000100,
"div a,f": 0b0000001100000101,
"div a,h": 0b0000001100000110,
"div a,l": 0b0000001100000111,
"div b,a": 0b0000001100010000,
"div b,b": 0b0000001100010001,
"div b,c": 0b0000001100010010,
"div b,d": 0b0000001100010011,
"div b,e": 0b0000001100010100,
"div b,f": 0b0000001100010101,
"div b,h": 0b0000001100010110,
"div b,l": 0b0000001100010111,
"div c,a": 0b0000001100100000,
"div c,b": 0b0000001100100001,
"div c,c": 0b0000001100100010,
"div c,d": 0b0000001100100011,
"div c,e": 0b0000001100100100,
"div c,f": 0b0000001100100101,
"div c,h": 0b0000001100100110,
"div c,l": 0b0000001100100111,
"div d,a": 0b0000001100110000,
"div d,b": 0b0000001100110001,
"div d,c": 0b0000001100110010,
"div d,d": 0b0000001100110011,
"div d,e": 0b0000001100110100,
"div d,f": 0b0000001100110101,
"div d,h": 0b0000001100110110,
"div d,l": 0b0000001100110111,
"div e,a": 0b0000001101000000,
"div e,b": 0b0000001101000001,
"div e,c": 0b0000001101000010,
"div e,d": 0b0000001101000011,
"div e,e": 0b0000001101000100,
"div e,f": 0b0000001101000101,
"div e,h": 0b0000001101000110,
"div e,l": 0b0000001101000111,
"div f,a": 0b0000001101010000,
"div f,b": 0b0000001101010001,
"div f,c": 0b0000001101010010,
"div f,d": 0b0000001101010011,
"div f,e": 0b0000001101010100,
"div f,f": 0b0000001101010101,
"div f,h": 0b0000001101010110,
"div f,l": 0b0000001101010111,
"div h,a": 0b0000001101100000,
"div h,b": 0b0000001101100001,
"div h,c": 0b0000001101100010,
"div h,d": 0b0000001101100011,
"div h,e": 0b0000001101100100,
"div h,f": 0b0000001101100101,
"div h,h": 0b0000001101100110,
"div h,l": 0b0000001101100111,
"div l,a": 0b0000001101110000,
"div l,b": 0b0000001101110001,
"div l,c": 0b0000001101110010,
"div l,d": 0b0000001101110011,
"div l,e": 0b0000001101110100,
"div l,f": 0b0000001101110101,
"div l,h": 0b0000001101110110,
"div l,l": 0b0000001101110111,
"cmp a,a": 0b0000010000000000,
"cmp a,b": 0b0000010000000001,
"cmp a,c": 0b0000010000000010,
"cmp a,d": 0b0000010000000011,
"cmp a,e": 0b0000010000000100,
"cmp a,f": 0b0000010000000101,
"cmp a,h": 0b0000010000000110,
"cmp a,l": 0b0000010000000111,
"cmp b,a": 0b0000010000010000,
"cmp b,b": 0b0000010000010001,
"cmp b,c": 0b0000010000010010,
"cmp b,d": 0b0000010000010011,
"cmp b,e": 0b0000010000010100,
"cmp b,f": 0b0000010000010101,
"cmp b,h": 0b0000010000010110,
"cmp b,l": 0b0000010000010111,
"cmp c,a": 0b0000010000100000,
"cmp c,b": 0b0000010000100001,
"cmp c,c": 0b0000010000100010,
"cmp c,d": 0b0000010000100011,
"cmp c,e": 0b0000010000100100,
"cmp c,f": 0b0000010000100101,
"cmp c,h": 0b0000010000100110,
"cmp c,l": 0b0000010000100111,
"cmp d,a": 0b0000010000110000,
"cmp d,b": 0b0000010000110001,
"cmp d,c": 0b0000010000110010,
"cmp d,d": 0b0000010000110011,
"cmp d,e": 0b0000010000110100,
"cmp d,f": 0b0000010000110101,
"cmp d,h": 0b0000010000110110,
"cmp d,l": 0b0000010000110111,
"cmp e,a": 0b0000010001000000,
"cmp e,b": 0b0000010001000001,
"cmp e,c": 0b0000010001000010,
"cmp e,d": 0b0000010001000011,
"cmp e,e": 0b0000010001000100,
"cmp e,f": 0b0000010001000101,
"cmp e,h": 0b0000010001000110,
"cmp e,l": 0b0000010001000111,
"cmp f,a": 0b0000010001010000,
"cmp f,b": 0b0000010001010001,
"cmp f,c": 0b0000010001010010,
"cmp f,d": 0b0000010001010011,
"cmp f,e": 0b0000010001010100,
"cmp f,f": 0b0000010001010101,
"cmp f,h": 0b0000010001010110,
"cmp f,l": 0b0000010001010111,
"cmp h,a": 0b0000010001100000,
"cmp h,b": 0b0000010001100001,
"cmp h,c": 0b0000010001100010,
"cmp h,d": 0b0000010001100011,
"cmp h,e": 0b0000010001100100,
"cmp h,f": 0b0000010001100101,
"cmp h,h": 0b0000010001100110,
"cmp h,l": 0b0000010001100111,
"cmp l,a": 0b0000010001110000,
"cmp l,b": 0b0000010001110001,
"cmp l,c": 0b0000010001110010,
"cmp l,d": 0b0000010001110011,
"cmp l,e": 0b0000010001110100,
"cmp l,f": 0b0000010001110101,
"cmp l,h": 0b0000010001110110,
"cmp l,l": 0b0000010001110111,
"xor a,a": 0b0000011000000000,
"xor a,b": 0b0000011000000001,
"xor a,c": 0b0000011000000010,
"xor a,d": 0b0000011000000011,
"xor a,e": 0b0000011000000100,
"xor a,f": 0b0000011000000101,
"xor a,h": 0b0000011000000110,
"xor a,l": 0b0000011000000111,
"xor b,a": 0b0000011000010000,
"xor b,b": 0b0000011000010001,
"xor b,c": 0b0000011000010010,
"xor b,d": 0b0000011000010011,
"xor b,e": 0b0000011000010100,
"xor b,f": 0b0000011000010101,
"xor b,h": 0b0000011000010110,
"xor b,l": 0b0000011000010111,
"xor c,a": 0b0000011000100000,
"xor c,b": 0b0000011000100001,
"xor c,c": 0b0000011000100010,
"xor c,d": 0b0000011000100011,
"xor c,e": 0b0000011000100100,
"xor c,f": 0b0000011000100101,
"xor c,h": 0b0000011000100110,
"xor c,l": 0b0000011000100111,
"xor d,a": 0b0000011000110000,
"xor d,b": 0b0000011000110001,
"xor d,c": 0b0000011000110010,
"xor d,d": 0b0000011000110011,
"xor d,e": 0b0000011000110100,
"xor d,f": 0b0000011000110101,
"xor d,h": 0b0000011000110110,
"xor d,l": 0b0000011000110111,
"xor e,a": 0b0000011001000000,
"xor e,b": 0b0000011001000001,
"xor e,c": 0b0000011001000010,
"xor e,d": 0b0000011001000011,
"xor e,e": 0b0000011001000100,
"xor e,f": 0b0000011001000101,
"xor e,h": 0b0000011001000110,
"xor e,l": 0b0000011001000111,
"xor f,a": 0b0000011001010000,
"xor f,b": 0b0000011001010001,
"xor f,c": 0b0000011001010010,
"xor f,d": 0b0000011001010011,
"xor f,e": 0b0000011001010100,
"xor f,f": 0b0000011001010101,
"xor f,h": 0b0000011001010110,
"xor f,l": 0b0000011001010111,
"xor h,a": 0b0000011001100000,
"xor h,b": 0b0000011001100001,
"xor h,c": 0b0000011001100010,
"xor h,d": 0b0000011001100011,
"xor h,e": 0b0000011001100100,
"xor h,f": 0b0000011001100101,
"xor h,h": 0b0000011001100110,
"xor h,l": 0b0000011001100111,
"xor l,a": 0b0000011001110000,
"xor l,b": 0b0000011001110001,
"xor l,c": 0b0000011001110010,
"xor l,d": 0b0000011001110011,
"xor l,e": 0b0000011001110100,
"xor l,f": 0b0000011001110101,
"xor l,h": 0b0000011001110110,
"xor l,l": 0b0000011001110111,
"and a,a": 0b0000011100000000,
"and a,b": 0b0000011100000001,
"and a,c": 0b0000011100000010,
"and a,d": 0b0000011100000011,
"and a,e": 0b0000011100000100,
"and a,f": 0b0000011100000101,
"and a,h": 0b0000011100000110,
"and a,l": 0b0000011100000111,
"and b,a": 0b0000011100010000,
"and b,b": 0b0000011100010001,
"and b,c": 0b0000011100010010,
"and b,d": 0b0000011100010011,
"and b,e": 0b0000011100010100,
"and b,f": 0b0000011100010101,
"and b,h": 0b0000011100010110,
"and b,l": 0b0000011100010111,
"and c,a": 0b0000011100100000,
"and c,b": 0b0000011100100001,
"and c,c": 0b0000011100100010,
"and c,d": 0b0000011100100011,
"and c,e": 0b0000011100100100,
"and c,f": 0b0000011100100101,
"and c,h": 0b0000011100100110,
"and c,l": 0b0000011100100111,
"and d,a": 0b0000011100110000,
"and d,b": 0b0000011100110001,
"and d,c": 0b0000011100110010,
"and d,d": 0b0000011100110011,
"and d,e": 0b0000011100110100,
"and d,f": 0b0000011100110101,
"and d,h": 0b0000011100110110,
"and d,l": 0b0000011100110111,
"and e,a": 0b0000011101000000,
"and e,b": 0b0000011101000001,
"and e,c": 0b0000011101000010,
"and e,d": 0b0000011101000011,
"and e,e": 0b0000011101000100,
"and e,f": 0b0000011101000101,
"and e,h": 0b0000011101000110,
"and e,l": 0b0000011101000111,
"and f,a": 0b0000011101010000,
"and f,b": 0b0000011101010001,
"and f,c": 0b0000011101010010,
"and f,d": 0b0000011101010011,
"and f,e": 0b0000011101010100,
"and f,f": 0b0000011101010101,
"and f,h": 0b0000011101010110,
"and f,l": 0b0000011101010111,
"and h,a": 0b0000011101100000,
"and h,b": 0b0000011101100001,
"and h,c": 0b0000011101100010,
"and h,d": 0b0000011101100011,
"and h,e": 0b0000011101100100,
"and h,f": 0b0000011101100101,
"and h,h": 0b0000011101100110,
"and h,l": 0b0000011101100111,
"and l,a": 0b0000011101110000,
"and l,b": 0b0000011101110001,
"and l,c": 0b0000011101110010,
"and l,d": 0b0000011101110011,
"and l,e": 0b0000011101110100,
"and l,f": 0b0000011101110101,
"and l,h": 0b0000011101110110,
"and l,l": 0b0000011101110111,
"or a,a": 0b0000100000000000,
"or a,b": 0b0000100000000001,
"or a,c": 0b0000100000000010,
"or a,d": 0b0000100000000011,
"or a,e": 0b0000100000000100,
"or a,f": 0b0000100000000101,
"or a,h": 0b0000100000000110,
"or a,l": 0b0000100000000111,
"or b,a": 0b0000100000010000,
"or b,b": 0b0000100000010001,
"or b,c": 0b0000100000010010,
"or b,d": 0b0000100000010011,
"or b,e": 0b0000100000010100,
"or b,f": 0b0000100000010101,
"or b,h": 0b0000100000010110,
"or b,l": 0b0000100000010111,
"or c,a": 0b0000100000100000,
"or c,b": 0b0000100000100001,
"or c,c": 0b0000100000100010,
"or c,d": 0b0000100000100011,
"or c,e": 0b0000100000100100,
"or c,f": 0b0000100000100101,
"or c,h": 0b0000100000100110,
"or c,l": 0b0000100000100111,
"or d,a": 0b0000100000110000,
"or d,b": 0b0000100000110001,
"or d,c": 0b0000100000110010,
"or d,d": 0b0000100000110011,
"or d,e": 0b0000100000110100,
"or d,f": 0b0000100000110101,
"or d,h": 0b0000100000110110,
"or d,l": 0b0000100000110111,
"or e,a": 0b0000100001000000,
"or e,b": 0b0000100001000001,
"or e,c": 0b0000100001000010,
"or e,d": 0b0000100001000011,
"or e,e": 0b0000100001000100,
"or e,f": 0b0000100001000101,
"or e,h": 0b0000100001000110,
"or e,l": 0b0000100001000111,
"or f,a": 0b0000100001010000,
"or f,b": 0b0000100001010001,
"or f,c": 0b0000100001010010,
"or f,d": 0b0000100001010011,
"or f,e": 0b0000100001010100,
"or f,f": 0b0000100001010101,
"or f,h": 0b0000100001010110,
"or f,l": 0b0000100001010111,
"or h,a": 0b0000100001100000,
"or h,b": 0b0000100001100001,
"or h,c": 0b0000100001100010,
"or h,d": 0b0000100001100011,
"or h,e": 0b0000100001100100,
"or h,f": 0b0000100001100101,
"or h,h": 0b0000100001100110,
"or h,l": 0b0000100001100111,
"or l,a": 0b0000100001110000,
"or l,b": 0b0000100001110001,
"or l,c": 0b0000100001110010,
"or l,d": 0b0000100001110011,
"or l,e": 0b0000100001110100,
"or l,f": 0b0000100001110101,
"or l,h": 0b0000100001110110,
"or l,l": 0b0000100001110111,
"xor2 ab,ab": 0b0000100100000000,
"xor2 ab,cd": 0b0000100100000001,
"xor2 ab,ef": 0b0000100100000010,
"xor2 ab,hl": 0b0000100100000011,
"xor2 cd,ab": 0b0000100100010000,
"xor2 cd,cd": 0b0000100100010001,
"xor2 cd,ef": 0b0000100100010010,
"xor2 cd,hl": 0b0000100100010011,
"xor2 ef,ab": 0b0000100100100000,
"xor2 ef,cd": 0b0000100100100001,
"xor2 ef,ef": 0b0000100100100010,
"xor2 ef,hl": 0b0000100100100011,
"xor2 hl,ab": 0b0000100100110000,
"xor2 hl,cd": 0b0000100100110001,
"xor2 hl,ef": 0b0000100100110010,
"xor2 hl,hl": 0b0000100100110011,
"and2 ab,ab": 0b0000101000000000,
"and2 ab,cd": 0b0000101000000001,
"and2 ab,ef": 0b0000101000000010,
"and2 ab,hl": 0b0000101000000011,
"and2 cd,ab": 0b0000101000010000,
"and2 cd,cd": 0b0000101000010001,
"and2 cd,ef": 0b0000101000010010,
"and2 cd,hl": 0b0000101000010011,
"and2 ef,ab": 0b0000101000100000,
"and2 ef,cd": 0b0000101000100001,
"and2 ef,ef": 0b0000101000100010,
"and2 ef,hl": 0b0000101000100011,
"and2 hl,ab": 0b0000101000110000,
"and2 hl,cd": 0b0000101000110001,
"and2 hl,ef": 0b0000101000110010,
"and2 hl,hl": 0b0000101000110011,
"or2 ab,ab": 0b0000101100000000,
"or2 ab,cd": 0b0000101100000001,
"or2 ab,ef": 0b0000101100000010,
"or2 ab,hl": 0b0000101100000011,
"or2 cd,ab": 0b0000101100010000,
"or2 cd,cd": 0b0000101100010001,
"or2 cd,ef": 0b0000101100010010,
"or2 cd,hl": 0b0000101100010011,
"or2 ef,ab": 0b0000101100100000,
"or2 ef,cd": 0b0000101100100001,
"or2 ef,ef": 0b0000101100100010,
"or2 ef,hl": 0b0000101100100011,
"or2 hl,ab": 0b0000101100110000,
"or2 hl,cd": 0b0000101100110001,
"or2 hl,ef": 0b0000101100110010,
"or2 hl,hl": 0b0000101100110011,
"xor2 ab,ab": 0b0000100100000000,
"xor2 ab,cd": 0b0000100100000001,
"xor2 ab,ef": 0b0000100100000010,
"xor2 ab,hl": 0b0000100100000011,
"xor2 cd,ab": 0b0000100100010000,
"xor2 cd,cd": 0b0000100100010001,
"xor2 cd,ef": 0b0000100100010010,
"xor2 cd,hl": 0b0000100100010011,
"xor2 ef,ab": 0b0000100100100000,
"xor2 ef,cd": 0b0000100100100001,
"xor2 ef,ef": 0b0000100100100010,
"xor2 ef,hl": 0b0000100100100011,
"xor2 hl,ab": 0b0000100100110000,
"xor2 hl,cd": 0b0000100100110001,
"xor2 hl,ef": 0b0000100100110010,
"xor2 hl,hl": 0b0000100100110011,
"and2 ab,ab": 0b0000101000000000,
"and2 ab,cd": 0b0000101000000001,
"and2 ab,ef": 0b0000101000000010,
"and2 ab,hl": 0b0000101000000011,
"and2 cd,ab": 0b0000101000010000,
"and2 cd,cd": 0b0000101000010001,
"and2 cd,ef": 0b0000101000010010,
"and2 cd,hl": 0b0000101000010011,
"and2 ef,ab": 0b0000101000100000,
"and2 ef,cd": 0b0000101000100001,
"and2 ef,ef": 0b0000101000100010,
"and2 ef,hl": 0b0000101000100011,
"and2 hl,ab": 0b0000101000110000,
"and2 hl,cd": 0b0000101000110001,
"and2 hl,ef": 0b0000101000110010,
"and2 hl,hl": 0b0000101000110011,
"or2 ab,ab": 0b0000101100000000,
"or2 ab,cd": 0b0000101100000001,
"or2 ab,ef": 0b0000101100000010,
"or2 ab,hl": 0b0000101100000011,
"or2 cd,ab": 0b0000101100010000,
"or2 cd,cd": 0b0000101100010001,
"or2 cd,ef": 0b0000101100010010,
"or2 cd,hl": 0b0000101100010011,
"or2 ef,ab": 0b0000101100100000,
"or2 ef,cd": 0b0000101100100001,
"or2 ef,ef": 0b0000101100100010,
"or2 ef,hl": 0b0000101100100011,
"or2 hl,ab": 0b0000101100110000,
"or2 hl,cd": 0b0000101100110001,
"or2 hl,ef": 0b0000101100110010,
"or2 hl,hl": 0b0000101100110011,
"push a": 0b0000110000000000,
"push b": 0b0000110000000001,
"push c": 0b0000110000000010,
"push d": 0b0000110000000011,
"push e": 0b0000110000000100,
"push f": 0b0000110000000101,
"push h": 0b0000110000000110,
"push l": 0b0000110000000111,
"push pc": 0b0000110000001000,
"push sp": 0b0000110000001001,
"pop a": 0b0000110000010000,
"pop b": 0b0000110000010001,
"pop c": 0b0000110000010010,
"pop d": 0b0000110000010011,
"pop e": 0b0000110000010100,
"pop f": 0b0000110000010101,
"pop h": 0b0000110000010110,
"pop l": 0b0000110000010111,
"pop pc": 0b0000110000011000,
"pop sp": 0b0000110000011001,
"inc a": 0b0000110000100000,
"inc b": 0b0000110000100001,
"inc c": 0b0000110000100010,
"inc d": 0b0000110000100011,
"inc e": 0b0000110000100100,
"inc f": 0b0000110000100101,
"inc h": 0b0000110000100110,
"inc l": 0b0000110000100111,
"inc pc": 0b0000110000101000,
"inc sp": 0b0000110000101001,
"jp *": 0b0000110000110000,
"jp c,*": 0b0000110000110001,
"jp z,*": 0b0000110000110010,
"jp p,*": 0b0000110000110011,
"jp nc,*": 0b0000110000110100,
"jp nz,*": 0b0000110000110101,
"jp np,*": 0b0000110000110110,
"jp neg,*": 0b0000110000110111,
"adc a": 0b0000110001000000,
"adc b": 0b0000110001000001,
"adc c": 0b0000110001000010,
"adc d": 0b0000110001000011,
"adc e": 0b0000110001000100,
"adc f": 0b0000110001000101,
"adc h": 0b0000110001000110,
"adc l": 0b0000110001000111,
"adc pc": 0b0000110001001000,
"adc sp": 0b0000110001001001,
"sbc a": 0b0000110001010000,
"sbc b": 0b0000110001010001,
"sbc c": 0b0000110001010010,
"sbc d": 0b0000110001010011,
"sbc e": 0b0000110001010100,
"sbc f": 0b0000110001010101,
"sbc h": 0b0000110001010110,
"sbc l": 0b0000110001010111,
"sbc pc": 0b0000110001011000,
"sbc sp": 0b0000110001011001,
"add2 a": 0b0000110001100000,
"add2 b": 0b0000110001100001,
"add2 c": 0b0000110001100010,
"add2 d": 0b0000110001100011,
"add2 e": 0b0000110001100100,
"add2 f": 0b0000110001100101,
"add2 h": 0b0000110001100110,
"add2 l": 0b0000110001100111,
"add2 pc": 0b0000110001101000,
"add2 sp": 0b0000110001101001,
"sub2 a": 0b0000110001110000,
"sub2 b": 0b0000110001110001,
"sub2 c": 0b0000110001110010,
"sub2 d": 0b0000110001110011,
"sub2 e": 0b0000110001110100,
"sub2 f": 0b0000110001110101,
"sub2 h": 0b0000110001110110,
"sub2 l": 0b0000110001110111,
"sub2 pc": 0b0000110001111000,
"sub2 sp": 0b0000110001111001,
"adc2 a": 0b0000110010000000,
"adc2 b": 0b0000110010000001,
"adc2 c": 0b0000110010000010,
"adc2 d": 0b0000110010000011,
"adc2 e": 0b0000110010000100,
"adc2 f": 0b0000110010000101,
"adc2 h": 0b0000110010000110,
"adc2 l": 0b0000110010000111,
"adc2 pc": 0b0000110010001000,
"adc2 sp": 0b0000110010001001,
"sbc2 a": 0b0000110010010000,
"sbc2 b": 0b0000110010010001,
"sbc2 c": 0b0000110010010010,
"sbc2 d": 0b0000110010010011,
"sbc2 e": 0b0000110010010100,
"sbc2 f": 0b0000110010010101,
"sbc2 h": 0b0000110010010110,
"sbc2 l": 0b0000110010010111,
"sbc2 pc": 0b0000110010011000,
"sbc2 sp": 0b0000110010011001,
"dec a": 0b0000110010100000,
"dec b": 0b0000110010100001,
"dec c": 0b0000110010100010,
"dec d": 0b0000110010100011,
"dec e": 0b0000110010100100,
"dec f": 0b0000110010100101,
"dec h": 0b0000110010100110,
"dec l": 0b0000110010100111,
"dec pc": 0b0000110010101000,
"dec sp": 0b0000110010101001,
"write a": 0b0000110011000000,
"write b": 0b0000110011000001,
"write c": 0b0000110011000010,
"write d": 0b0000110011000011,
"write e": 0b0000110011000100,
"write f": 0b0000110011000101,
"write h": 0b0000110011000110,
"write l": 0b0000110011000111,
"write pc": 0b0000110011001000,
"write sp": 0b0000110011001001,
"read a": 0b0000110011010000,
"read b": 0b0000110011010001,
"read c": 0b0000110011010010,
"read d": 0b0000110011010011,
"read e": 0b0000110011010100,
"read f": 0b0000110011010101,
"read h": 0b0000110011010110,
"read l": 0b0000110011010111,
"read pc": 0b0000110011011000,
"read sp": 0b0000110011011001,
"write_default a": 0b0000110011100000,
"write_default b": 0b0000110011100001,
"write_default c": 0b0000110011100010,
"write_default d": 0b0000110011100011,
"write_default e": 0b0000110011100100,
"write_default f": 0b0000110011100101,
"write_default h": 0b0000110011100110,
"write_default l": 0b0000110011100111,
"write_default pc": 0b0000110011101000,
"write_default sp": 0b0000110011101001,
"read_default a": 0b0000110011110000,
"read_default b": 0b0000110011110001,
"read_default c": 0b0000110011110010,
"read_default d": 0b0000110011110011,
"read_default e": 0b0000110011110100,
"read_default f": 0b0000110011110101,
"read_default h": 0b0000110011110110,
"read_default l": 0b0000110011110111,
"read_default pc": 0b0000110011111000,
"read_default sp": 0b0000110011111001,
"not a": 0b0000110100000000,
"not b": 0b0000110100000001,
"not c": 0b0000110100000010,
"not d": 0b0000110100000011,
"not e": 0b0000110100000100,
"not f": 0b0000110100000101,
"not h": 0b0000110100000110,
"not l": 0b0000110100000111,
"not pc": 0b0000110100001000,
"not sp": 0b0000110100001001,
"not2 a": 0b0000110100010000,
"not2 b": 0b0000110100010001,
"not2 c": 0b0000110100010010,
"not2 d": 0b0000110100010011,
"not2 e": 0b0000110100010100,
"not2 f": 0b0000110100010101,
"not2 h": 0b0000110100010110,
"not2 l": 0b0000110100010111,
"not2 pc": 0b0000110100011000,
"not2 sp": 0b0000110100011001,
"set_default_port": 0b0000110100100000,
"nop": 0b0000110100100001,
"hlt": 0b0000110100100010,
            }
        
        self.regs = {
            "a": 0,
            "b": 1,
            "c": 2,
            "d": 3,
            "e": 4,
            "f": 5,
            "h": 6,
            "l": 7,
            "pc": 8,
            "sp": 9,
        }

        self.NUM_ARGS = {
            "mov": 2,
            "add": 2,
            "jp" : 1,
            "nop": 0,
            "push": 1,
            "pop": 1,
            "inc": 1,
            "dec": 1,
            }

    def get_type(self, arg):
        if arg in "abcdefhl":
            return "reg"
        if arg.startswith("["):
            return "abs"
        if arg.isdigit():
            return "imm"

    def pad(self, bin_str, l=8):
        return "".join(["0" for i in range(l - len(bin_str))]) + bin_str
        
    def clean(self, code):
        code = "".join(code.split("\t"))
        code = code.split("\n")
        out = ""
        for line in code:
            ln = ""
            #strip comments
            for char in line:
                if char == ";":
                    break
                ln += char
            #strip empty lines
            if not ln.strip(" ") == "":
                out += " ".join(ln.split(" ")) + "\n"
        #replace comma + space with just comma
        return out.strip().replace(", ", ",")

    def assemble(self):
        self.code = self.clean(self.code)
        print(self.code + "\n\n")
        instrs = self.code.split("\n")
        out = ""
        #stage 1: compile most, leave labels
        for instr in instrs:
            if not instr.endswith(":"):
                #it's not a label
                #get 'base' instruction, e.g. mov
                base = instr.split(" ")[0]
                num_args = self.NUM_ARGS[base]

                imm = None
                if num_args > 0:

                    args = instr.split(" ")[1].split(",")
                    
                    if num_args != len(args):
                        raise SyntaxError("Expected {} args but got {} instead. (At {})".format(num_args, len(args), instr))

                    if self.get_type(args[-1]) == "imm":
                        imm = int(args[-1])
                        args[-1] = "*"

                #print(" ".join([base, ",".join(args)]))
                #print(self.pad(bin(self.OPCODES[" ".join([base, ",".join(args)])])[2:], l=16))

                    hexop = self.pad(hex(self.OPCODES[" ".join([base, ",".join(args)])])[2:], l=4)
                else:
                    hexop = self.pad(hex(self.OPCODES[instr])[2:], l=4)
                        
                out += "0x" + hexop[:2] + ",\n0x" + hexop[2:] + ",\n"
                if imm != None:
                    thing = self.pad(hex(imm)[2:], l=4)
                    out += "0x" + thing[:2] + ",\n0x" + thing[2:] + ",\n"
                    
        return out

a = Assembler("""
mov a, 10 ; opoafsfd comment
""")

print(a.assemble())
